# Generated by Django 2.0.2 on 2018-03-04 14:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Biometric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.TextField(verbose_name='Passport Photo')),
                ('f1', models.TextField(verbose_name='Finder #1')),
                ('f2', models.TextField(verbose_name='Finder #2')),
                ('f3', models.TextField(verbose_name='Finder #3')),
                ('f4', models.TextField(verbose_name='Finder #4')),
                ('f5', models.TextField(verbose_name='Finder #5')),
                ('f6', models.TextField(verbose_name='Finder #6')),
                ('f7', models.TextField(verbose_name='Finder #7')),
                ('f8', models.TextField(verbose_name='Finder #8')),
                ('f9', models.TextField(verbose_name='Finder #9')),
                ('f10', models.TextField(verbose_name='Finder #10')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateTaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Registration Name')),
                ('address', models.TextField()),
                ('trade_name', models.CharField(max_length=150, verbose_name='Trade Name')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('tin', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='JTB TIN')),
                ('company_size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large')], max_length=20, verbose_name='Company Size')),
                ('ownership_type', models.CharField(choices=[('Private Limited Company', 'Private Limited Company'), ('Public Limited Company', 'Public Limited Company'), ('Trusteeship', 'Trusteeship'), ('Companies Limited By Guarantee', 'Companies Limited By Guarantee'), ('Federal MDAs', 'Federal MDAs'), ('State MDAs', 'State MDAs'), ('Foreign/Non-resident Companies', 'Foreign/Non-resident Companies'), ('Partnership', 'Partnership'), ('Private Unlimited Company', 'Private Unlimited Company'), ('Sole Proprietorship', 'Sole Proprietorship')], max_length=75, verbose_name='Organization Type')),
                ('reg_status', models.CharField(choices=[('Registered', 'Registered'), ('Unregistered', 'Unregistered')], max_length=20, verbose_name='Registration Status')),
                ('reg_date', models.DateField(blank=True, null=True, verbose_name='CAC Registration Date')),
                ('start_date', models.DateField(verbose_name='Business Start Date')),
                ('reg_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Registration Number')),
                ('line_of_business', models.CharField(max_length=75, verbose_name='Line of Business')),
                ('sector', models.CharField(max_length=75, verbose_name='Sector')),
                ('contact_name', models.CharField(max_length=150, verbose_name='Contact Name')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('create_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporate_creater', to=settings.AUTH_USER_MODEL)),
                ('update_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporate_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Corporate Tax Payer',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IndividualTaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=75, verbose_name='Surname')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('other_name', models.CharField(max_length=75, null=True, verbose_name='Other Name')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('tin', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='JTB TIN')),
                ('nationality', models.CharField(max_length=75, verbose_name='Nationality')),
                ('tax_payer_company', models.CharField(max_length=150, verbose_name='Company')),
                ('occupation', models.CharField(max_length=75, verbose_name='Occupation')),
                ('employment_status', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Self Employed', 'Self Employed'), ('Employed', 'Employed')], max_length=20, verbose_name='Employment Status')),
                ('residential_address', models.TextField()),
                ('phone', models.CharField(max_length=15, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('create_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individual_creater', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.AddField(
            model_name='lga',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lgas', to='dashboard.State'),
        ),
        migrations.AddField(
            model_name='individualtaxpayer',
            name='lga_of_origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_lga', to='dashboard.Lga'),
        ),
        migrations.AddField(
            model_name='individualtaxpayer',
            name='state_of_origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_state', to='dashboard.State'),
        ),
        migrations.AddField(
            model_name='individualtaxpayer',
            name='update_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individual_updater', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='biometric',
            name='tax_payer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='biometrics', to='dashboard.IndividualTaxPayer'),
        ),
    ]
